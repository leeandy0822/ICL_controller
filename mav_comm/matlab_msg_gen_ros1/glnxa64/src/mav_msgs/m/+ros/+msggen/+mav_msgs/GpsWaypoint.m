
classdef GpsWaypoint < ros.Message
    %GpsWaypoint MATLAB implementation of mav_msgs/GpsWaypoint
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'mav_msgs/GpsWaypoint' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '61c3751c96f3b418f93879727f9a070a' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Latitude' 'Longitude' 'Altitude' 'Heading' 'MaxSpeed' 'MaxAcc' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'latitude' 'longitude' 'altitude' 'heading' 'maxSpeed' 'maxAcc' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        Latitude
        Longitude
        Altitude
        Heading
        MaxSpeed
        MaxAcc
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'GpsWaypoint', 'Header')
            obj.Header = val;
        end
        function set.Latitude(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GpsWaypoint', 'Latitude');
            obj.Latitude = double(val);
        end
        function set.Longitude(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GpsWaypoint', 'Longitude');
            obj.Longitude = double(val);
        end
        function set.Altitude(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GpsWaypoint', 'Altitude');
            obj.Altitude = double(val);
        end
        function set.Heading(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GpsWaypoint', 'Heading');
            obj.Heading = double(val);
        end
        function set.MaxSpeed(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GpsWaypoint', 'MaxSpeed');
            obj.MaxSpeed = double(val);
        end
        function set.MaxAcc(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'GpsWaypoint', 'MaxAcc');
            obj.MaxAcc = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.mav_msgs.GpsWaypoint.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.mav_msgs.GpsWaypoint(strObj);
        end
    end
end
