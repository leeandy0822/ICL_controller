
classdef PointCloudWithPose < ros.Message
    %PointCloudWithPose MATLAB implementation of mav_planning_msgs/PointCloudWithPose
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'mav_planning_msgs/PointCloudWithPose' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '2a8b498d41262fbae6e2ab39e0965442' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'SensorPose' 'CloudInSensorFrame' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'sensor_pose' 'cloud_in_sensor_frame' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            'ros.msg.geometry_msgs.TransformStamped' ...
            'ros.msg.sensor_msgs.PointCloud2' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        SensorPose
        CloudInSensorFrame
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'PointCloudWithPose', 'Header')
            obj.Header = val;
        end
        function set.SensorPose(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.geometry_msgs.TransformStamped'};
            validateattributes(val, validClasses, validAttributes, 'PointCloudWithPose', 'SensorPose')
            obj.SensorPose = val;
        end
        function set.CloudInSensorFrame(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msg.sensor_msgs.PointCloud2'};
            validateattributes(val, validClasses, validAttributes, 'PointCloudWithPose', 'CloudInSensorFrame')
            obj.CloudInSensorFrame = val;
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.mav_planning_msgs.PointCloudWithPose.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.mav_planning_msgs.PointCloudWithPose(strObj);
        end
    end
end
