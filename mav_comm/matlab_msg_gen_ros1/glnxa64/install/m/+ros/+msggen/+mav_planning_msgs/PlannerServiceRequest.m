
classdef PlannerServiceRequest < ros.Message
    %PlannerServiceRequest MATLAB implementation of mav_planning_msgs/PlannerServiceRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'mav_planning_msgs/PlannerServiceRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '6090fe8ab3df1362b8c26859b8850940' % The MD5 Checksum of the message definition
        PropertyList = { 'StartPose' 'StartVelocity' 'GoalPose' 'GoalVelocity' 'BoundingBox' } % List of non-constant message properties
        ROSPropertyList = { 'start_pose' 'start_velocity' 'goal_pose' 'goal_velocity' 'bounding_box' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.geometry_msgs.PoseStamped' ...
            'ros.msggen.geometry_msgs.Vector3' ...
            'ros.msggen.geometry_msgs.PoseStamped' ...
            'ros.msggen.geometry_msgs.Vector3' ...
            'ros.msggen.geometry_msgs.Vector3' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        StartPose
        StartVelocity
        GoalPose
        GoalVelocity
        BoundingBox
    end
    methods
        function set.StartPose(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.PoseStamped'};
            validateattributes(val, validClasses, validAttributes, 'PlannerServiceRequest', 'StartPose')
            obj.StartPose = val;
        end
        function set.StartVelocity(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Vector3'};
            validateattributes(val, validClasses, validAttributes, 'PlannerServiceRequest', 'StartVelocity')
            obj.StartVelocity = val;
        end
        function set.GoalPose(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.PoseStamped'};
            validateattributes(val, validClasses, validAttributes, 'PlannerServiceRequest', 'GoalPose')
            obj.GoalPose = val;
        end
        function set.GoalVelocity(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Vector3'};
            validateattributes(val, validClasses, validAttributes, 'PlannerServiceRequest', 'GoalVelocity')
            obj.GoalVelocity = val;
        end
        function set.BoundingBox(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Vector3'};
            validateattributes(val, validClasses, validAttributes, 'PlannerServiceRequest', 'BoundingBox')
            obj.BoundingBox = val;
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.mav_planning_msgs.PlannerServiceRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.mav_planning_msgs.PlannerServiceRequest(strObj);
        end
    end
end
